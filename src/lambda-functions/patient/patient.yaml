AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Patient functions stack."

Parameters:
  DBHost:
    Type: String
  Database:
    Type: String
  Username:
    Type: String
  Password:
    Type: String
  PyMySQLLayerArn:
    Description: ARN of the Lambda layer to associate with our function
    Type: String

Resources:
  # GetAPatientFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: get_a_patient
  #     Handler: handler.lambda_handler
  #     Runtime: python3.8
  #     Layers:
  #       - !Ref ODBCLayerArn
  #     Role: !ImportValue LambdaExecutionRoleArn
  #     Environment:
  #       Variables:
  #         HOST: !Ref DBHost
  #         DATABASE: !Ref Database
  #         USERNAME: !Ref Username
  #         PASSWORD: !Ref Password
  #     Events:
  #       GetRoot:
  #         Type: Api
  #         Properties:
  #           Path: /patient/
  #           Method: get
  #           RestApiId: !ImportValue AppApiId

  GetActivityFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_a_patient
      Handler: app.lambda_handler
      Runtime: python3.8
      Layers:
        - !Ref PyMySQLLayerArn
      Environment:
        Variables:
          HOST: !Ref DBHost
          DATABASE: !Ref Database
          USERNAME: !Ref Username
          PASSWORD: !Ref Password
      Events:
        CreateActivities:
          Type: Api
          Properties:
            Path: /activities/{id}
            Method: get
      Policies:
        - Version: "2012-10-17" # IAM Policy Version
          Statement:
            - Effect: Allow
              Action:
                - "rds:*"
              Resource: "*"
# Outputs:
#   GetAPatientFunctionArn:
#     Description: "ARN of the GetAPatient function"
#     Value: !GetAtt GetAPatientFunction.Arn

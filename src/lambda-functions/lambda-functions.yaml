AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Nested stack for all lambda functions"

Parameters:
  StageName:
    Type: String
  AppName:
    Type: String
  UserPoolArn:
    Type: String
  DBHost:
    Type: String
    Description: "Database host address"
  Database:
    Type: String
    Description: "Database name"
  Username:
    Type: String
    Description: "Database username"
  Password:
    Type: String
    Description: "Database password"
    NoEcho: true
  PyMySQLLayerArn:
    Description: ARN of the Lambda layer to associate with our function
    Type: String

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      Name: !Sub "${StageName}-${AppName}-api"
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !Ref UserPoolArn

  PatientFunctions:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: patient/patient.yaml
      Parameters:
        StageName: !Ref StageName
        AppName: !Ref AppName
        UserPoolArn: !Ref UserPoolArn
        DBHost: !Ref DBHost
        Database: !Ref Database
        Username: !Ref Username
        Password: !Ref Password
        PyMySQLLayerArn: !Ref PyMySQLLayerArn
        MyApi: !Ref MyApi

  # StaffFunctions:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: ./lambda-functions/staff/staff.yaml
  #     Parameters:
  #       Server: !Ref Server
  #       Database: !Ref Database
  #       Username: !Ref Username
  #       Password: !Ref Password
# Outputs:
#   PatientFunctionOutputs:
#     Description: "Outputs from the PatientFunctions stack"
#     Value:
#       Fn::GetAtt:
#         - PatientFunctions
#         - Outputs

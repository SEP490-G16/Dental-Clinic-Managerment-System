AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Patient functions stack."

Parameters:
  StageName:
    Type: String
  AppName:
    Type: String
  UserPoolArn:
    Type: String
  DBHost:
    Type: String
  Database:
    Type: String
  Username:
    Type: String
  Password:
    Type: String
  PyMySQLLayerArn:
    Description: ARN of the Lambda layer to associate with our function
    Type: String
  LambdaAuthorizerFunctionArn:
    Type: String
  BucketImageName:
    Type: String
  Region:
    Type: String
    
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      Name: !Sub "${StageName}-${AppName}-examination-api"
      Cors:
        AllowOrigin: "'*'"
        AllowMethods: "'OPTIONS,GET,DELETE,PUT,POST'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      Auth:
        DefaultAuthorizer: LambdaAuthorizer
        Authorizers:
          LambdaAuthorizer:
            FunctionArn: !Ref LambdaAuthorizerFunctionArn

  CreateAExaminationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create
      Handler: app.lambda_handler
      Runtime: python3.8
      Layers:
        - !Ref PyMySQLLayerArn
      Environment:
        Variables:
          HOST: !Ref DBHost
          DATABASE: !Ref Database
          USERNAME: !Ref Username
          PASSWORD: !Ref Password
          BUCKET_IMAGE_NAME: !Ref BucketImageName
          REGION: !Ref Region

      Events:
        CreateActivities:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /examination
            Method: post
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "rds:*"
              Resource: "*"

  UpdateAExaminationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update
      Handler: app.lambda_handler
      Runtime: python3.8
      Layers:
        - !Ref PyMySQLLayerArn
      Environment:
        Variables:
          HOST: !Ref DBHost
          DATABASE: !Ref Database
          USERNAME: !Ref Username
          PASSWORD: !Ref Password
      Events:
        CreateActivities:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /examination/{id}
            Method: put
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "rds:*"
              Resource: "*"

  DeleteAExaminationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: delete
      Handler: app.lambda_handler
      Runtime: python3.8
      Layers:
        - !Ref PyMySQLLayerArn
      Environment:
        Variables:
          HOST: !Ref DBHost
          DATABASE: !Ref Database
          USERNAME: !Ref Username
          PASSWORD: !Ref Password
      Events:
        CreateActivities:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /examination/{id}
            Method: delete
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "rds:*"
              Resource: "*"

  GetAExaminationByExaminationIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-by-examination-id
      Handler: app.lambda_handler
      Runtime: python3.8
      Layers:
        - !Ref PyMySQLLayerArn
      Environment:
        Variables:
          HOST: !Ref DBHost
          DATABASE: !Ref Database
          USERNAME: !Ref Username
          PASSWORD: !Ref Password
      Events:
        CreateActivities:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /examination/{id}
            Method: get
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "rds:*"
              Resource: "*"

  GetAExaminationByTreatmentCourseIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-by-treatment-course-id
      Handler: app.lambda_handler
      Runtime: python3.8
      Layers:
        - !Ref PyMySQLLayerArn
      Environment:
        Variables:
          HOST: !Ref DBHost
          DATABASE: !Ref Database
          USERNAME: !Ref Username
          PASSWORD: !Ref Password
      Events:
        CreateActivities:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /examination/treatment-course/{id}
            Method: get
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "rds:*"
              Resource: "*"
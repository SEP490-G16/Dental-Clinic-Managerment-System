AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Patient functions stack."

Parameters:
  StageName:
    Type: String
  AppName:
    Type: String
  UserPoolArn:
    Type: String
  UserPoolId:
    Type: String
  DBHost:
    Type: String
  Database:
    Type: String
  Username:
    Type: String
  Password:
    Type: String
  PyMySQLLayerArn:
    Description: ARN of the Lambda layer to associate with our function
    Type: String

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      Name: !Sub "${StageName}-${AppName}-staff-api"
      Cors:
        AllowOrigin: "'*'"
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !Ref UserPoolArn

  GetListUsersNewFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: list-users
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPoolId
          USERPOOLID: !Ref UserPoolId
      Events:
        CreateActivities:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /staff
            Method: get
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "rds:*"
              Resource: "*"

  PutUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: admin-update-user-attributes
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPoolId
          USERPOOLID: !Ref UserPoolId
      Events:
        CreateActivities:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /staff
            Method: put
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "rds:*"
              Resource: "*"

  DeleteUsersNewFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: admin-delete-user
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPoolId
          USERPOOLID: !Ref UserPoolId
      Events:
        CreateActivities:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /staff/{username}
            Method: delete
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "rds:*"
              Resource: "*"